JSON
 4. Создать внешний репозиторий c названием JSON. --
	- go to the page "https://github.com/new"
	- enter a Repository name "JSON" 
	- check the box "Public" and "Add a README file"
	- click button "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер. -- 
	git clone https://github.com/Kivanzhi/JSON.git

 6. Внутри локального JSON создать файл “new.json”. --
	touch ./JSON/new.json

 7. Добавить файл под гит.--
	cd JSON/
	git add new.json
	
 8. Закоммитить файл.--
	git commit -m "add new.json"

 9. Отправить файл на внешний GitHub репозиторий.--
	git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.--
	vim new.json
	ins 
{
	"First name":"Ivan",
	"Last name":"Kabarzhitsky",
	"Patronymic":"Aleksandrovich",
	"Age":33,
	"Pets":"none",
	"Future salary": [
				{"junior":"700$"},
				{"middle":"1500$"},
				{"senior":"2100$"}
			 ]
}

 11. Отправить изменения на внешний репозиторий.--
	git commit -am "file changes"

 12. Создать файл preferences.json
	nano preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.--
{
	"My preferences": [
				{"Favorite movie":"Cloud Atlas"},
				{"Favorite serial":"The Scrubs"},
				{"Favorite food":"Fried chicken"},
				{"Favorite season":"Summer"},
				{"Country you would like to visit":"USA"} 

			  ]
}


 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON--

{
        "Skills on the courses": [
					{"1.":"Basic theory (What is testing, bug reports, documentation, types, 						methods, testing directions, etc.) SDLC, STLC."},
					{"2.":"What is the client-server architecture."},
					{"3.":"HTTP methods of requests to the server."},
					{"4.":"HTTP server response codes."},
					{"5.":"Structures of HTTP requests and responses."},
					{"6.":"What is JSON, XML. Their structure."},
					{"7.":"API testing via Postman (JS, API autotests)."},
					{"8.":"Removing and reading logs from an external server."},
					{"9.":"Sniffing http web traffic via Charles and Fiddler."},
					{"10.":"Dev Tools of web browsers (Google Chrome, FireFox)."},
					{"11.":"VPN. (How it works, why it is needed, how to use it, tool 						options)."},
					{"12.":"Mobile testing."},
					{"13.":"Feature of iOS, Android, guidelines."},
					{"14.":"Build iOS apps on XCode. (Those who don't have a Mac computer will 						just take a look)"},
					{"15.":"Build Android apps on Android Studio."},
					{"16.":"ADB (android device management)."},
					{"17.":"Setting up proxy and vpn on iOS and Android."},
					{"18.":"Interception (sniffing) of mobile traffic via Charles and Fiddler on 						iOS and Android."},
					{"19.":"Linux command line (terminal) (copying, creating, viewing, moving 						files on servers without a graphical interface)"},
					{"20.":"Basics of bash scripting, automation of routine tasks on the 						server."},
					{"21.":"Access to remote servers."},
					{"22.":"Basics of SQL (Create, Delete, Drop, Insert Into, Select, From, 						Where, Join)."},
					{"23.":"Postgres database (installation, configuration and use)."},
					{"24.":"Non-relational database Redis (installation, configuration and 						use)."},
					{"25.":"Load testing in Jmeter."},
					{"26.":"Scrum development methodology."},
					{"27.":"Python. (Learning the basics. Creating a client server 						application)."}
                                ]
}

 15. Отправить сразу 2 файла на внешний репозиторий.--
	git add .
	git commit -m "add 2 files"
	git push

 16. На веб интерфейсе создать файл bug_report.json.--
	add file -create new file bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. -- 
	-commit new file

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.--
	Click on bug_report.json link
	Click button "Edit this file"
{
  "Bug report structure": [
                            {"1.":"ID"},
                            {"2.":"Summury"},
                            {"3.":"Severity"},
                            {"4.":"Priotity"},
                            {"5.":"Steps to Reproduce"},
                            {"6.":"Result"},
                            {"7.":"Expected result"},
                            {"8.":"Environment"}
                          ]
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
	commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON --
	git pull


XML
 21. Создать внешний репозиторий c названием XML.--

	- go to the page "https://github.com/new"
	- enter a Repository name "XML" 
	- check the box "Public" and "Add a README file"
	- click button "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.--
	git clone https://github.com/Kivanzhi/XML.git

 23. Внутри локального XML создать файл “new.xml”.--
	touch new.xml

 24. Добавить файл под гит.--
	git add .
 25. Закоммитить файл.
	git commit -m "add new.xml file"

 26. Отправить файл на внешний GitHub репозиторий.--
	git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.--
<?xml version="1.0" encoding="UTF-8"?>
<BIO>
	<FirstName>Ivan</FirstName>
	<LastName>Kabarzhitsky</LastName>
	<Patronymic>Aleksandrovich</Patronymic>
	<Age>33</Age>
	<Pets>none</Pets>
		<FutureSalary>
			<junior>700$</junior>
			<middle>1500$</middle>
			<senior>2100$</senior>	
		</FutureSalary>
</BIO>

	
 28. Отправить изменения на внешний репозиторий. --
	git add . | git commit -m "add new.xml file" | git push

 29. Создать файл preferences.xml --
	touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.--
<?xml version="1.0" encoding="UTF-8"?>

<MyPreferences>

        <FavoriteMovie>Cloud Atlas</FavoriteMovie>
        <FavoriteSerial>The Scrubs</FavoriteSerial>
        <FavoriteFood>Fried chicken</FavoriteFood>
        <FavoriteSeason>Summer</FavoriteSeason>
        <CountryYouWouldLikeToVisit>USA</CountryYouWouldLikeToVisit>

</MyPreferences>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML--
<?xml version="1.0" encoding="UTF-8"?>
<V.KsendzovCourse>
	<SkillsOnTheCourses> 
		<element>1.Basic theory (What is testing, bug reports, documentation, types, methods, testing directions, etc.) SDLC, STLC.</element>
		<element>2.What is the client-server architecture.</element>
		<element>3.HTTP methods of requests to the server.</element>
		<element>4.HTTP server response codes.</element>
		<element>5.Structures of HTTP requests and responses.</element>
		<element>6.What is JSON, XML. Their structure.</element>
		<element>7.API testing via Postman (JS, API autotests).</element>
		<element>8.Removing and reading logs from an external server.</element>
		<element>9.Sniffing http web traffic via Charles and Fiddler.</element>
		<element>10.Dev Tools of web browsers (Google Chrome, FireFox).</element>
		<element>11.VPN. (How it works, why it is needed, how to use it, tool options).</element>
		<element>12.Mobile testing.</element>
		<element>13.Feature of iOS, Android, guidelines.</element>
		<element>14.Build iOS apps on XCode. (Those who don't have a Mac computer will just take a look).</element>
		<element>15.Build Android apps on Android Studio.</element>
		<element>16.ADB (android device management).</element>
		<element>17.Setting up proxy and vpn on iOS and Android.</element>
		<element>18.Interception (sniffing) of mobile traffic via Charles and Fiddler on iOS and Android.</element>
		<element>19.Linux command line (terminal) (copying, creating, viewing, moving files on servers without a graphical interface).</element>
		<element>20.Basics of bash scripting, automation of routine tasks on the server.</element>
		<element>21.Access to remote servers.</element>
		<element>22.Basics of SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).</element>
		<element>23.Postgres database (installation, configuration and use).</element>
		<element>24.Non-relational database Redis (installation, configuration and use).</element>
		<element>25.Load testing in Jmeter.</element>
		<element>26.Scrum development methodology.</element>
		<element>27.Python. (Learning the basics. Creating a client server application).</element>
	</SkillsOnTheCourses>
</V.KsendzovCourse>
	
 32. Сделать коммит в одну строку.--
	git add . | git commit -m "add 2 files ".xml""
 33. Отправить сразу 2 файла на внешний репозиторий. --
	git push
 34. На веб интерфейсе создать файл bug_report.xml. --
	add file -create new file bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--
	-commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. -- 
	Click on bug_report.xml link
	Click button "Edit this file"
	<?xml version="1.0" encoding="UTF-8"?>
<bugStructure>
	<ID>...</ID>
	<Summury>...</Summury>
  	<Severity>...</Severity>
	<Priority>...</Priority>
 	<StepsToReproduce>...</StepsToReproduce>
	<Result>...</Result>
  	<ExpectedResult>...</ExpectedResult>
</bugStructure>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--
	ckick on "Commit changes"
 38. Синхронизировать внешний и локальный репозиторий XML




TXT
 1. Создать внешний репозиторий c названием TXT. -- 
	- go to the page "https://github.com/new"
	- enter a Repository name "TXT" 
	- check the box "Public" and "Add a README file"
	- press "Create repository"

 2. Клонировать репозиторий TXT на локальный компьютер. -- 
	git clone https://github.com/Kivanzhi/TXT.git

 3. Внутри локального TXT создать файл “new.txt”. --
	touch new.txt

 4. Добавить файл под гит. --
	git add . 

 5. Закоммитить файл. --
	git commit -m "add new file"

 6. Отправить файл на внешний GitHub репозиторий. -- 
	git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.--
	Information about yourself

First name: Ivan
Last name: Kabarzhitsky
Patronymic: Aleksandrovich
Age: 33
Pets: none
Future salary: 
	- junior: 700$
	- middle: 1500$
	- senior: 2100$
	
 8. Отправить изменения на внешний репозиторий. --
	git commit -am "change txt file" | git push

 9. Создать файл preferences.txt --
	touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. --
	My preferences:
 
	Favorite movie: Cloud Atlas
	Favorite serial: The Scrubs
	Favorite food: Fried chicken
	Favorite season: Summer
	Country you would like to visit: USA

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT --

	Skills on the courses: 
	1.Basic theory (What is testing, bug reports, documentation, types, methods, testing directions, etc.) SDLC, STLC.
	2.What is the client-server architecture.
	3.HTTP methods of requests to the server.
	4.HTTP server response codes.
	5.Structures of HTTP requests and responses.
	6.What is JSON, XML. Their structure.
	7.API testing via Postman (JS, API autotests).
	8.Removing and reading logs from an external server.
	9.Sniffing http web traffic via Charles and Fiddler.
	10.Dev Tools of web browsers (Google Chrome, FireFox).
	11.VPN. (How it works, why it is needed, how to use it, tool options).
	12.Mobile testing.
	13.Feature of iOS, Android, guidelines.
	14.Build iOS apps on XCode. (Those who don't have a Mac computer will just take a look).
	15.Build Android apps on Android Studio.
	16.ADB (android device management).
	17.Setting up proxy and vpn on iOS and Android.
	18.Interception (sniffing) of mobile traffic via Charles and Fiddler on iOS and Android.
	19.Linux command line (terminal) (copying, creating, viewing, moving files on servers without a graphical interface).
	20.Basics of bash scripting, automation of routine tasks on the server.
	21.Access to remote servers.
	22.Basics of SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
	23.Postgres database (installation, configuration and use).
	24.Non-relational database Redis (installation, configuration and use).
	25.Load testing in Jmeter.
	26.Scrum development methodology.
	27.Python. (Learning the basics. Creating a client server application).

 12. Сделать коммит в одну строку. --
	git add . | git commit -m "add preferences and skills .txt files"

 13. Отправить сразу 2 файла на внешний репозиторий. --
	git push

 14. На веб интерфейсе создать файл bug_report.txt. --
	add file -create new file bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--
	-commit new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.--
	Click on bug_report.txt link
	Click button "Edit this file"
	Bug report structure:
	1.ID
	2.Summury
	3.Severity
	4.Priotity
	5.Steps to Reproduce
	6.Result
	7.Expected result
	8.Environment

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--
	-Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT --
	git pull
